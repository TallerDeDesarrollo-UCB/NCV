# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Backend deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-staging:
    runs-on: windows-latest
    environment:
      name: Staging
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v2
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"
          include-prerelease: true
      - run: |
          rm .\NinosConValorAPI\appsettings.json
          echo '{ "ConnectionStrings": { "NinosConValorDB": "${{ secrets.DB_CONNECTION_STRING }}" },' >> .\NinosConValorAPI\appsettings.json
          echo '"Logging": { "LogLevel": { "Default": "Information", "Microsoft.AspNetCore": "Warning" } }, "AllowedHosts": "*", "AuthSettings": { "Key": "SuperSecretKey123456 ", "Audience": "http://NinosConValor.net","Issuer": "http://NinosConValor.net"}}' >> .\NinosConValorAPI\appsettings.json
      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  build-production:
    runs-on: windows-latest
    environment:
      name: Production
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v2
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"
          include-prerelease: true
      - run: |
          rm .\NinosConValorAPI\appsettings.json
          echo '{ "ConnectionStrings": { "ninosConValorDB": "${{ secrets.DB_CONNECTION_STRING }}" },' >> .\NinosConValorAPI\appsettings.json
          echo '"Logging": { "LogLevel": { "Default": "Information", "Microsoft.AspNetCore": "Warning" } }, "AllowedHosts": "*", "AuthSettings": { "Key": "SuperSecretKey123456 ", "Audience": "http://NinosConValor.net","Issuer": "http://NinosConValor.net"}}' >> .\NinosConValorAPI\appsettings.json
      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy-staging:
    runs-on: windows-latest
    needs: [build-staging]
    environment:
      name: Staging
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "ncv-api-staging"
          slot-name: "production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_NCV_API_STAGING }}
          package: .

  deploy-production:
    runs-on: windows-latest
    needs: [deploy-staging, build-production]
    environment:
      name: Production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "ncv-api-produccion"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_NCV_API_PRODUCCION }}
          package: .
